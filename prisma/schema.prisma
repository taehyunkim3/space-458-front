// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Banner {
  id       Int    @id @default(autoincrement())
  title    String
  subtitle String?
  image    String?
  imageData Bytes?
  imageMimeType String?
  link     String?
  type     String @default("image")
  order    Int    @default(0)
  active   Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("banners")
}

model Exhibition {
  id          Int      @id @default(autoincrement())
  title       String
  artist      String
  startDate   DateTime
  endDate     DateTime
  poster      String?
  posterData  Bytes?
  posterMimeType String?
  images      String[]
  imagesData  Bytes[]
  imagesMimeTypes String[]
  description String   @db.Text
  curator     String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("exhibitions")
}

model News {
  id        Int      @id @default(autoincrement())
  title     String
  type      NewsType
  date      DateTime
  content   String   @db.Text
  image     String?
  imageData Bytes?
  imageMimeType String?
  link      String?
  featured  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("news")
}


model AdminUser {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("admin_users")
}

model LoginAttempt {
  id        Int      @id @default(autoincrement())
  ip        String
  attempts  Int      @default(1)
  lockedAt  DateTime?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([ip])
  @@map("login_attempts")
}


enum NewsType {
  NOTICE
  PRESS
  EVENT
  WORKSHOP
}
